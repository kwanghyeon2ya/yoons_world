<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.iyoons.world.dao.CommentsDAO">

	<select id="getCommentsList" resultType="com.iyoons.world.vo.CommentsVO">
		select cd.* from
			(select
				c.comm_seq,
				c.comm_content,
				c.comm_group,
				c.comm_level,
				c.post_seq,
				c.regr_seq,
				c.first_insert_dt,
				c.updr_seq,
				c.last_update_dt,
				c.status,
				c.comm_id,
				rownum r 
			from
				(select * from comments order by comm_group desc,first_insert_dt asc)c
			where 
				c.post_seq = #{postSeq} and c.status in (0,1)
			)cd
		where	
			cd.r &gt;= #{startRow} and cd.r &lt;= #{endRow}
	</select>
	
	<insert id="insertComments">
			insert into comments(comm_seq,
								 comm_content,
								 comm_group,
								 comm_level,
								 post_seq,
								 regr_seq,
								 first_insert_dt,
								 updr_seq,
								 last_update_dt,
								 status,
								 comm_id
								 	)
				 		  values(#{commSeq},
				 		  		 #{commContent},
	  						 <choose>
			 		  		 	<when test="commSeq == 0">
			 		  		 	#{commSeq},
			 		  		 	</when>
			 		  		 	<otherwise>
			 		  		 	#{commGroup},
			 		  		 	</otherwise>
			 		  		 </choose>
			 		  		 	 #{commLevel},
				 		  		 #{postSeq},
				 		  		 #{regrSeq},
				 		  		 sysdate,
				 		  		 0,
				 		  		 sysdate,
				 		  		 1,
				 		  		 #{commId}
				 					)
		<selectKey resultType="int" keyProperty="commSeq" order="BEFORE">
			select comm_seq.nextval from dual	
		</selectKey>
		</insert>
	<select id="getExistCommentsCount" resultType="int">
		select count(comm_seq) from comments where post_seq = #{postSeq} and status = 1
	</select>
	<select id="getALLCommentsCount" resultType="int">
		select count(comm_seq) from comments where post_seq = #{postSeq}
	</select>
	<select id="getComment" resultType="com.iyoons.world.vo.CommentsVO">
		select
			comm_seq,
			post_seq,
			comm_level,
			comm_group
		from
			comments
		where
			comm_seq = #{commSeq} 
			and post_seq = #{postSeq}
	</select>
	<update id="delComment">
		update
			comments
		set
			status = 0,
			updr_seq = #{updrSeq},
			last_update_dt = sysdate
		where
			comm_seq = #{commSeq}
			and regr_seq = #{regrSeq}
			and status = 1
	</update>
	<update id="modComment">
	update
		comments 
	set 
		comm_content = #{commContent},
		last_update_dt = sysdate,
		updr_seq = #{updrSeq}
	where 
		post_seq = #{postSeq}
		and comm_seq = #{commSeq}
		and status = 1
	</update>
</mapper>