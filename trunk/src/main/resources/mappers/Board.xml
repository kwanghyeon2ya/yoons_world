<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.iyoons.world.dao.BoardDAO">

<resultMap id="BoardList" type="com.iyoons.world.vo.BoardVO">
	<result property="postNum" column="POST_NUM"/>
	<result property="postSeq" column="POST_SEQ" />
	<result property="writerName" column="WRITER_NAME" />
	<result property="subject" column="SUBJECT" />
	<result property="content" column="CONTENT" />
	<result property="status" column="STATUS" />
	<result property="readCnt" column="READ_CNT" />
	<result property="boardType" column="BOARD_TYPE" />
	<result property="fileAttachYn" column="FILE_ATTACH_YN" />
	<result property="boardFixYn" column="BOARD_FIX_YN" />
	<result property="regrSeq" column="REGR_SEQ" />
	<result property="firstInsertDt" column="FIRST_INSERT_DT" />
	<result property="updrSeq" column="UPDR_SEQ" />
	<result property="lastUpdateDt" column="LAST_UPDATE_DT" />
</resultMap>

	<insert id="insertBoard">
			insert into post_board( post_seq,
									writer_name,
									subject,
									content,
									status,
									read_cnt,
									board_type,			
									file_attach_yn,
									board_fix_yn,
									regr_seq,
									first_insert_dt,
									updr_seq,
									last_update_dt)
				 			values( #{postSeq},
									#{writerName},
									#{subject},
									#{content},
									0,	
									0,
									#{boardType},
									#{fileAttachYn},
									'N',
									#{regrSeq},
									sysdate,
									0,
									sysdate)
		<selectKey  resultType="int" keyProperty="postSeq" order="BEFORE" keyColumn="int">
			select post_seq.nextval from dual
		</selectKey>
	</insert>
	
	<select id="getBoardList" resultMap="BoardList">
	
		select cd.* from(
			select
	            pb.post_seq,
	            pb.writer_name,
	            pb.subject,
	            pb.content,
	            pb.status,
	            pb.read_cnt,
	            pb.board_type,
	            pb.first_insert_dt,
	            pb.last_update_dt,
	            row_number() over(order by pb.first_insert_dt desc) as POST_NUM
	        from
				post_board pb
				<if test="search != null and search.equals('comments')">
			inner join 
				(select DISTINCT
				c1.post_seq from comments c1 
			where 
				c1.comm_content like '%${keyword}%')ic 
					on pb.post_seq = ic.post_seq
				</if>
			where 
				pb.board_type=#{boardType} and 
				pb.status=0 
			<if test="searchCheck != null">
				<if test="search != null and search.equals('subject_content')">
				and (pb.subject like '%${keyword}%' or 
				pb.content like '%${keyword}%') 
				</if>
			</if>
				)cd
			where 
				cd.POST_NUM &gt;= #{startRow} and cd.POST_NUM &lt;= #{endRow}
		</select>
		
	<select id="getBoardCount" resultType="int">
		select 
			count(post_seq) 
		from 
			post_board
		where 
			board_type=#{boardType} and 
			 status=0
	</select>
	<select id="getSearchCount" resultType="int">
		select 
			count(post_seq) 
		from (select 
			pb.post_seq
		from 
			post_board pb
		 <if test="searchCheck != null and search.equals('comments')">
		inner join (
			select DISTINCT
			  	c1.post_seq 
			from 
			 	comments c1
			where 
				c1.comm_content like '%${keyword}%')ic		 
		 	on 
		 	  pb.post_seq = ic.post_seq</if> 
		 where pb.status = 0 and pb.board_type=#{boardType}
		 <if test="searchCheck != null and search != null and search.equals('subject_content')">
			and (pb.subject like '%${keyword}%' 
				or pb.content like '%${keyword}%') 		 
		 </if>
		 )
	</select>
	<select id="getView" resultType="com.iyoons.world.vo.BoardVO">
		select 
			post_seq,
			writer_name,
			subject,
			content,
			read_cnt,
			board_type,
			file_attach_yn,
			board_fix_yn,
			regr_seq,
			first_insert_dt,
			updr_seq,
			last_update_dt
		from 
			post_board
		where 
			post_seq = #{postSeq} 
			and status = 0
	</select>
	
	<update id="modView">
		update 
			post_board 
		set 
			subject = #{subject} ,
			content = #{content} ,
			last_update_dt = sysdate
		where 
			post_seq=#{postSeq} and status = 0
	</update>
	<update id="updateCnt">
		update
			post_board
		set
			read_cnt = read_cnt + 1
		where
			post_seq = #{postSeq}
	</update>
	<update id="delView">
		update
			post_board
		set
			status = 1,
			updr_seq = #{updrSeq}
		where
			post_seq = #{postSeq} and regr_seq = #{regrSeq}
	</update>
	<select id="findUser" resultType="int">
		select 
			regr_seq
		from
			post_board
		where
			post_seq = #{postSeq}
			and status = 0
	</select>
</mapper>